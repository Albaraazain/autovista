{
    "sourceFile": "lib/screens/home_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1733500655166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733504741029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,16 @@\n   const HomeScreen({Key? key, required this.userId}) : super(key: key);\r\n \r\n   Future<String> _getUserName() async {\r\n     try {\r\n-      final userDoc = await FirebaseFirestore.instance.collection('users').doc(userId).get();\r\n+      final userDoc = await FirebaseFirestore.instance\r\n+          .collection('users')\r\n+          .doc(userId)\r\n+          .get();\r\n       if (userDoc.exists) {\r\n         final userData = userDoc.data();\r\n-        return userData?['name'] ?? 'User'; // Default to 'User' if name is not found\r\n+        return userData?['name'] ??\r\n+            'User'; // Default to 'User' if name is not found\r\n       } else {\r\n         return 'User';\r\n       }\r\n     } catch (e) {\r\n@@ -78,9 +82,9 @@\n                       onPressed: () {\r\n                         Navigator.pushNamed(\r\n                           context,\r\n                           '/profile',\r\n-                          arguments: userId, // Pass Firebase UID to Profile Screen\r\n+                          arguments: userId, // Pass userId as String\r\n                         );\r\n                       },\r\n                     ),\r\n                     // Edit Vehicle Information Button\r\n@@ -91,9 +95,12 @@\n                       onPressed: () {\r\n                         Navigator.pushNamed(\r\n                           context,\r\n                           '/viewVehicle',\r\n-                          arguments: userId, // Pass Firebase UID to ViewVehicleScreen\r\n+                          arguments: {\r\n+                            'userId': userId,\r\n+                            'vehicleData': null,\r\n+                          },\r\n                         );\r\n                       },\r\n                     ),\r\n                     // View Scanned Documents Button\r\n@@ -101,18 +108,26 @@\n                       context,\r\n                       icon: Icons.document_scanner,\r\n                       label: \"View Documents\",\r\n                       onPressed: () {\r\n-                        Navigator.pushNamed(context, '/viewDocuments');\r\n+                        Navigator.pushNamed(\r\n+                          context,\r\n+                          '/viewDocuments',\r\n+                          arguments: userId,\r\n+                        );\r\n                       },\r\n                     ),\r\n                     // Event Planner Button\r\n                     _buildMenuButton(\r\n                       context,\r\n                       icon: Icons.event,\r\n                       label: \"Event Planner\",\r\n                       onPressed: () {\r\n-                        Navigator.pushNamed(context, '/eventScreen');\r\n+                        Navigator.pushNamed(\r\n+                          context,\r\n+                          '/eventScreen',\r\n+                          arguments: userId,\r\n+                        );\r\n                       },\r\n                     ),\r\n                   ],\r\n                 ),\r\n@@ -124,13 +139,13 @@\n     );\r\n   }\r\n \r\n   Widget _buildMenuButton(\r\n-      BuildContext context, {\r\n-        required IconData icon,\r\n-        required String label,\r\n-        required VoidCallback onPressed,\r\n-      }) {\r\n+    BuildContext context, {\r\n+    required IconData icon,\r\n+    required String label,\r\n+    required VoidCallback onPressed,\r\n+  }) {\r\n     return ElevatedButton(\r\n       onPressed: onPressed,\r\n       style: ElevatedButton.styleFrom(\r\n         backgroundColor: Colors.teal,\r\n"
                }
            ],
            "date": 1733500655166,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:cloud_firestore/cloud_firestore.dart';\r\n\r\nclass HomeScreen extends StatelessWidget {\r\n  final String userId; // Firebase UID\r\n\r\n  const HomeScreen({Key? key, required this.userId}) : super(key: key);\r\n\r\n  Future<String> _getUserName() async {\r\n    try {\r\n      final userDoc = await FirebaseFirestore.instance.collection('users').doc(userId).get();\r\n      if (userDoc.exists) {\r\n        final userData = userDoc.data();\r\n        return userData?['name'] ?? 'User'; // Default to 'User' if name is not found\r\n      } else {\r\n        return 'User';\r\n      }\r\n    } catch (e) {\r\n      return 'User'; // Fallback in case of error\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text(\"Home\"),\r\n        actions: [\r\n          IconButton(\r\n            onPressed: () => _logout(context),\r\n            icon: const Icon(Icons.logout),\r\n            tooltip: 'Logout',\r\n          ),\r\n        ],\r\n      ),\r\n      body: Center(\r\n        child: Padding(\r\n          padding: const EdgeInsets.all(16.0),\r\n          child: Column(\r\n            children: [\r\n              FutureBuilder<String>(\r\n                future: _getUserName(),\r\n                builder: (context, snapshot) {\r\n                  if (snapshot.connectionState == ConnectionState.waiting) {\r\n                    return const CircularProgressIndicator(); // Show a loader while fetching the name\r\n                  } else if (snapshot.hasError) {\r\n                    return const Text(\"Error loading user information.\");\r\n                  } else {\r\n                    return Text(\r\n                      \"Welcome to AutoVista, ${snapshot.data}!\",\r\n                      style: Theme.of(context).textTheme.titleLarge,\r\n                      textAlign: TextAlign.center,\r\n                    );\r\n                  }\r\n                },\r\n              ),\r\n              const SizedBox(height: 16),\r\n              Text(\r\n                \"Your one-stop solution for managing your vehicles.\",\r\n                style: Theme.of(context).textTheme.bodyMedium,\r\n                textAlign: TextAlign.center,\r\n              ),\r\n              const SizedBox(height: 32),\r\n\r\n              // Icon-based Menu\r\n              Flexible(\r\n                child: GridView.count(\r\n                  crossAxisCount: 2,\r\n                  crossAxisSpacing: 16,\r\n                  mainAxisSpacing: 16,\r\n                  children: [\r\n                    // View Profile Button\r\n                    _buildMenuButton(\r\n                      context,\r\n                      icon: Icons.person,\r\n                      label: \"View Profile\",\r\n                      onPressed: () {\r\n                        Navigator.pushNamed(\r\n                          context,\r\n                          '/profile',\r\n                          arguments: userId, // Pass Firebase UID to Profile Screen\r\n                        );\r\n                      },\r\n                    ),\r\n                    // Edit Vehicle Information Button\r\n                    _buildMenuButton(\r\n                      context,\r\n                      icon: Icons.car_repair,\r\n                      label: \"Edit Vehicle Info\",\r\n                      onPressed: () {\r\n                        Navigator.pushNamed(\r\n                          context,\r\n                          '/viewVehicle',\r\n                          arguments: userId, // Pass Firebase UID to ViewVehicleScreen\r\n                        );\r\n                      },\r\n                    ),\r\n                    // View Scanned Documents Button\r\n                    _buildMenuButton(\r\n                      context,\r\n                      icon: Icons.document_scanner,\r\n                      label: \"View Documents\",\r\n                      onPressed: () {\r\n                        Navigator.pushNamed(context, '/viewDocuments');\r\n                      },\r\n                    ),\r\n                    // Event Planner Button\r\n                    _buildMenuButton(\r\n                      context,\r\n                      icon: Icons.event,\r\n                      label: \"Event Planner\",\r\n                      onPressed: () {\r\n                        Navigator.pushNamed(context, '/eventScreen');\r\n                      },\r\n                    ),\r\n                  ],\r\n                ),\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  Widget _buildMenuButton(\r\n      BuildContext context, {\r\n        required IconData icon,\r\n        required String label,\r\n        required VoidCallback onPressed,\r\n      }) {\r\n    return ElevatedButton(\r\n      onPressed: onPressed,\r\n      style: ElevatedButton.styleFrom(\r\n        backgroundColor: Colors.teal,\r\n        padding: const EdgeInsets.all(16),\r\n        shape: RoundedRectangleBorder(\r\n          borderRadius: BorderRadius.circular(16),\r\n        ),\r\n      ),\r\n      child: Column(\r\n        mainAxisAlignment: MainAxisAlignment.center,\r\n        children: [\r\n          Icon(\r\n            icon,\r\n            size: 48,\r\n            color: Colors.white,\r\n          ),\r\n          const SizedBox(height: 8),\r\n          Text(\r\n            label,\r\n            textAlign: TextAlign.center,\r\n            style: const TextStyle(\r\n              color: Colors.white,\r\n              fontSize: 16,\r\n              fontWeight: FontWeight.bold,\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  // Logout Functionality\r\n  Future<void> _logout(BuildContext context) async {\r\n    try {\r\n      await FirebaseAuth.instance.signOut();\r\n      Navigator.pushReplacementNamed(context, '/login');\r\n    } catch (e) {\r\n      ScaffoldMessenger.of(context).showSnackBar(\r\n        SnackBar(content: Text('Error logging out: $e')),\r\n      );\r\n    }\r\n  }\r\n}\r\n"
        }
    ]
}